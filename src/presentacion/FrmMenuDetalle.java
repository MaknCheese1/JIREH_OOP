/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;
import datos.Dt_Menu;
import datos.Dt_MenuDetalle;
import datos.Dt_MenuTipo;
import entidades.Menu;
import entidades.MenuDetalle;
import entidades.MenuTipo;
import java.util.ArrayList;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author Dennis Caldera
 */
public class FrmMenuDetalle extends javax.swing.JFrame {
    //Atributos
    //Declaro las entidades
    private MenuDetalle menudetalle = new MenuDetalle();
    private MenuTipo menutipo = new MenuTipo();
    private Menu menu = new Menu();
    //Declaro las clases de datos
    private Dt_MenuDetalle dtmd = new Dt_MenuDetalle();
    private Dt_MenuTipo dtmt = new Dt_MenuTipo();
    private Dt_Menu dtm = new Dt_Menu();
    //Declaro la lista de datos
    private ArrayList<MenuDetalle> listMenuDetalle = new ArrayList<MenuDetalle>();
    private ArrayList<MenuTipo> listMenuTipo = new ArrayList<MenuTipo>();
    private ArrayList<Menu> listMenu = new ArrayList<Menu>();
    //declaramos el modelo de datos de la tabla
    DefaultTableModel myData = new DefaultTableModel();
     //declaramos un filtro de datos para la tabla
    TableRowSorter trsfiltro;
    
    /**
     * Creates new form FrmMenuDetalle
     */
    public FrmMenuDetalle() {
        initComponents();
        LlenarComboMenu();
        LlenarComboMenuTipo();
        llenarTablaMenuDetalle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtf_idMenuDetalle = new javax.swing.JTextField();
        jcb_idMenu = new javax.swing.JComboBox<>();
        jcb_idMenuTipo = new javax.swing.JComboBox<>();
        jtf_nombre = new javax.swing.JTextField();
        jtf_descripcion = new javax.swing.JTextField();
        jtf_precio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_menuDetalle = new javax.swing.JTable();
        jtf_buscarMenuDetalle = new javax.swing.JTextField();
        jb_newMenuDetalle = new javax.swing.JButton();
        jb_saveMenuDetalle = new javax.swing.JButton();
        jb_editMenuDetalle = new javax.swing.JButton();
        jb_deleteMenuDetalle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        jtf_idMenuDetalle.setEditable(false);
        jtf_idMenuDetalle.setOpaque(true);

        jcb_idMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        jcb_idMenuTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione..." }));

        jtf_nombre.setOpaque(true);

        jtf_descripcion.setOpaque(true);

        jtf_precio.setOpaque(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("ID Menu Detalle:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Menu:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Menu Tipo:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Nombre:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Descripcion:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Precio:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Buscar:");

        jtbl_menuDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id_menudetalle", "menu", "menu_tipo", "nombre", "descripcion", "precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbl_menuDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_menuDetalleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbl_menuDetalle);

        jtf_buscarMenuDetalle.setOpaque(true);
        jtf_buscarMenuDetalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_buscarMenuDetalleKeyTyped(evt);
            }
        });

        jb_newMenuDetalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Nuevo.png"))); // NOI18N
        jb_newMenuDetalle.setText("Nuevo");
        jb_newMenuDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_newMenuDetalleActionPerformed(evt);
            }
        });

        jb_saveMenuDetalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Guardar.png"))); // NOI18N
        jb_saveMenuDetalle.setText("Guardar");
        jb_saveMenuDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_saveMenuDetalleActionPerformed(evt);
            }
        });

        jb_editMenuDetalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Editar.png"))); // NOI18N
        jb_editMenuDetalle.setText("Editar");
        jb_editMenuDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_editMenuDetalleActionPerformed(evt);
            }
        });

        jb_deleteMenuDetalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Eliminar.png"))); // NOI18N
        jb_deleteMenuDetalle.setText("Eliminar");
        jb_deleteMenuDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_deleteMenuDetalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtf_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtf_nombre)
                                    .addComponent(jtf_descripcion)
                                    .addComponent(jcb_idMenuTipo, 0, 130, Short.MAX_VALUE)
                                    .addComponent(jcb_idMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtf_idMenuDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(163, 163, 163)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jb_deleteMenuDetalle, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jb_newMenuDetalle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jb_saveMenuDetalle, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jb_editMenuDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_buscarMenuDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_idMenuDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jb_newMenuDetalle))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jb_saveMenuDetalle))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jcb_idMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jcb_idMenuTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtf_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jb_editMenuDetalle)
                        .addGap(17, 17, 17)
                        .addComponent(jb_deleteMenuDetalle)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtf_buscarMenuDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtf_buscarMenuDetalleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_buscarMenuDetalleKeyTyped
        // TODO add your handling code here:
                    jtf_buscarMenuDetalle.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (jtf_buscarMenuDetalle.getText());
                jtf_buscarMenuDetalle.setText(cadena);
                repaint();
                filtrarTabla();
            }
        });
        trsfiltro = new TableRowSorter(jtbl_menuDetalle.getModel());
        jtbl_menuDetalle.setRowSorter(trsfiltro);
        
        
    }//GEN-LAST:event_jtf_buscarMenuDetalleKeyTyped

    private void jb_newMenuDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_newMenuDetalleActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        
    }//GEN-LAST:event_jb_newMenuDetalleActionPerformed

    private void jb_saveMenuDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_saveMenuDetalleActionPerformed
        // TODO add your handling code here:
        //validamos que todos los campos sean ingresados por el usuario
        if(jcb_idMenu.getSelectedIndex()==0 || jcb_idMenuTipo.getSelectedIndex()==0|| jtf_nombre.getText().equals("") || jtf_descripcion.getText().equals("") || jtf_precio.getText().equals("") ){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!",
                "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            //construimos nuestro objeto con los valores del formulario

            menu = (Menu)this.jcb_idMenu.getItemAt(this.jcb_idMenu.getSelectedIndex());
            menudetalle.setMenuID(menu.getMenuID());
            menutipo = (MenuTipo)this.jcb_idMenuTipo.getItemAt(this.jcb_idMenuTipo.getSelectedIndex());
            menudetalle.setMenu_tipoID(menutipo.getMenu_tipoID());
            menudetalle.setNombre(jtf_nombre.getText());
            menudetalle.setDescripcion(jtf_descripcion.getText());
            menudetalle.setPrecio(Float.parseFloat(jtf_precio.getText()));

            if(dtmd.existeMenDet(menudetalle)){
                JOptionPane.showMessageDialog(this,
                    "El proveedor que intenta ingresar ya existe, por favor revise sus datos e intente nuevamente!",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else{
                //validamos que el metodo guardar devuelve un true
                if(dtmd.guardarMenuDetalle(menudetalle)){
                    JOptionPane.showMessageDialog (this, "El registro fue almacenado con éxito!",
                        "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                    actualizarTabla();
                    limpiarCampos();

                }
                else{
                    JOptionPane.showMessageDialog(this,
                        "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.",
                        "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
    }//GEN-LAST:event_jb_saveMenuDetalleActionPerformed

    private void jb_editMenuDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_editMenuDetalleActionPerformed
        // TODO add your handling code here:
         if(jcb_idMenu.getSelectedIndex()==0 || jcb_idMenuTipo.getSelectedIndex()==0|| jtf_nombre.getText().equals("") || jtf_descripcion.getText().equals("") || jtf_precio.getText().equals("") ){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!",
                "ERROR", JOptionPane.WARNING_MESSAGE);
        }
         else{
            //construimos nuestro objeto con los valores del formulario
            menudetalle.setMenu_detalleID(Integer.parseInt(jtf_idMenuDetalle.getText()));
            menu = (Menu)this.jcb_idMenu.getItemAt(this.jcb_idMenu.getSelectedIndex());
            menudetalle.setMenuID(menu.getMenuID());
            menutipo = (MenuTipo)this.jcb_idMenuTipo.getItemAt(this.jcb_idMenuTipo.getSelectedIndex());
            menudetalle.setMenu_tipoID(menutipo.getMenu_tipoID());
            menudetalle.setNombre(jtf_nombre.getText());
            menudetalle.setDescripcion(jtf_descripcion.getText());
            menudetalle.setPrecio(Float.parseFloat(jtf_precio.getText()));

            //validamos que el metodo editar devuelve un true
            if(dtmd.editarMenuDetalle(menudetalle)){
                JOptionPane.showMessageDialog (this, "El registro fue actualizado con éxito!",
                    "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();

            }
            else{
                JOptionPane.showMessageDialog(this,
                    "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
        
    }//GEN-LAST:event_jb_editMenuDetalleActionPerformed

    private void jtbl_menuDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_menuDetalleMouseClicked
        // TODO add your handling code here:
         //obtenemos la fila seleccionada del jtable
        int fila = this.jtbl_menuDetalle.getSelectedRow();
        int idMenu = 0; //guarda el idMenu que se obtiene de la tabla
        int idMenuTipo = 0; //guarda el idMenuTipo que se obtiene de la tabla
        int size = 0; //guarda la cantidad de elementos que hay en el jcombobx de Menu 
        int size1 = 0;
        int pos = 1; //variable de control para recorrer las posiciones de los elementos en el jcombobox
        int pos1 = 1;

        //asignamos los valores a los campos del formulario
        this.jtf_idMenuDetalle.setText(this.jtbl_menuDetalle.getValueAt(fila, 0).toString());
        this.jtf_nombre.setText(this.jtbl_menuDetalle.getValueAt(fila, 3).toString());
        this.jtf_descripcion.setText(this.jtbl_menuDetalle.getValueAt(fila, 4).toString());
        this.jtf_precio.setText(this.jtbl_menuDetalle.getValueAt(fila, 5).toString());
        

        //obtenemos el idLocations del jtable
        idMenuTipo = Integer.parseInt(this.jtbl_menuDetalle.getValueAt(fila, 2).toString());
        System.out.println("idMenuTipo: "+idMenuTipo);

        size = this.jcb_idMenuTipo.getItemCount(); //obtenemos la cantidad de elementos contenidos en el jcombobox
        System.out.println("size: "+size);
        do{

            menutipo = (MenuTipo)this.jcb_idMenuTipo.getItemAt(pos);
            if(menutipo.getMenu_tipoID()==idMenuTipo){
                //selecciono el objeto del jcombobox
                this.jcb_idMenuTipo.setSelectedIndex(pos);
                System.out.println("pos: "+pos);
                break;
            }
            pos++;

        }
        while(pos<=size);

         //obtenemos el idLocations del jtable
        idMenu = Integer.parseInt(this.jtbl_menuDetalle.getValueAt(fila, 1).toString());
        System.out.println("idMenu: "+idMenu);

        size = this.jcb_idMenu.getItemCount(); //obtenemos la cantidad de elementos contenidos en el jcombobox
        System.out.println("size: "+size);
        do{

            menu = (Menu)this.jcb_idMenu.getItemAt(pos);
            if(menu.getMenuID()==idMenu){
                //selecciono el objeto del jcombobox
                this.jcb_idMenu.setSelectedIndex(pos);
                System.out.println("pos: "+pos);
                break;
            }
            pos++;

        }
        while(pos<=size1);
        
        
        
    }//GEN-LAST:event_jtbl_menuDetalleMouseClicked

    private void jb_deleteMenuDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_deleteMenuDetalleActionPerformed
        // TODO add your handling code here:
        if(jcb_idMenu.getSelectedIndex()==0 || jcb_idMenuTipo.getSelectedIndex()==0|| jtf_nombre.getText().equals("") || jtf_descripcion.getText().equals("") || jtf_precio.getText().equals("") ){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!",
                "ERROR", JOptionPane.WARNING_MESSAGE);
        }
        else{
            
            //construimos nuestro objeto con los valores del formulario
            menudetalle.setMenu_detalleID(Integer.parseInt(jtf_idMenuDetalle.getText()));
            menu = (Menu)this.jcb_idMenu.getItemAt(this.jcb_idMenu.getSelectedIndex());
            menudetalle.setMenuID(menu.getMenuID());
            menutipo = (MenuTipo)this.jcb_idMenuTipo.getItemAt(this.jcb_idMenuTipo.getSelectedIndex());
            menudetalle.setMenu_tipoID(menutipo.getMenu_tipoID());
            menudetalle.setNombre(jtf_nombre.getText());
            menudetalle.setDescripcion(jtf_descripcion.getText());
            menudetalle.setPrecio(Float.parseFloat(jtf_precio.getText()));

            //validamos que el metodo editar devuelve un true
            if(dtmd.deleteMenuDetalle(menudetalle)){
                JOptionPane.showMessageDialog (this, "El registro fue eliminado con éxito!",
                    "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();

            }
            else{
                JOptionPane.showMessageDialog(this,
                    "Revise los datos e intente nuevamente. Si el error persiste contacte al Administrador del Sistema.",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jb_deleteMenuDetalleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMenuDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMenuDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMenuDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMenuDetalle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMenuDetalle().setVisible(true);
            }
        });
    }

    //metodos
    private void LlenarComboMenu(){
        //llenamos la lista
        listMenu = dtm.listarMenu();
        
        for(Menu m : listMenu){
            //llenar combobox con los objetos de lista
            this.jcb_idMenu.addItem(m);
        }
    }
    
    private void LlenarComboMenuTipo(){
        //llenamos la lista
        listMenuTipo = dtmt.listarMenuTipo();
        
        for(MenuTipo t : listMenuTipo){
            //llenar combobox con los objetos de lista
            this.jcb_idMenuTipo.addItem(t);
        }
    }
    
    private void llenarTablaMenuDetalle(){
        //llenamos la lista
        listMenuDetalle = dtmd.listarMenuDetalle();
        
        //creamos un arraylist con las columnas del modelo
        ArrayList<Object> listNombreColumnas = new ArrayList<Object>();
        listNombreColumnas.add("id_menudetalle");
        listNombreColumnas.add("menu");
        listNombreColumnas.add("menu_tipo");
        listNombreColumnas.add("nombre");
        listNombreColumnas.add("descripcion");
        listNombreColumnas.add("precio");
       
        //recorremos cada elementos del arraylist y creamos un objeto
         for(Object column : listNombreColumnas){
            //asignamos las columnas al modelo
            myData.addColumn(column);
        }
        //recorremos cada elemento de la lista y creamos el objeto
         for(MenuDetalle mendet: listMenuDetalle){
            Object[] datosMenDet = new Object[]{mendet.getMenu_detalleID(), mendet.getMenuID(), mendet.getMenu_tipoID(), mendet.getNombre(), mendet.getDescripcion(), mendet.getPrecio()};
            //asignamos un arreglo de objetos a una fila del modelo
            myData.addRow(datosMenDet);
        }
        //Asignamos el modelo y/o coleccion de datos a la tabla
        jtbl_menuDetalle.setModel(myData);
    }
    
    private void filtrarTabla(){
       trsfiltro.setRowFilter(RowFilter.regexFilter(jtf_buscarMenuDetalle.getText(),3, 4));
    }
    
    private void limpiarCampos()
    {
        this.jtf_nombre.setText("");
        this.jtf_descripcion.setText("");
        this.jtf_precio.setText("");
        this.jcb_idMenu.setSelectedIndex(0);
        this.jcb_idMenuTipo.setSelectedIndex(0);
    }
    
    private void actualizarTabla(){
        myData.setColumnCount(0);
        myData.setRowCount(0);
        this.llenarTablaMenuDetalle();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_deleteMenuDetalle;
    private javax.swing.JButton jb_editMenuDetalle;
    private javax.swing.JButton jb_newMenuDetalle;
    private javax.swing.JButton jb_saveMenuDetalle;
    private javax.swing.JComboBox<Object> jcb_idMenu;
    private javax.swing.JComboBox<Object> jcb_idMenuTipo;
    private javax.swing.JTable jtbl_menuDetalle;
    private javax.swing.JTextField jtf_buscarMenuDetalle;
    private javax.swing.JTextField jtf_descripcion;
    private javax.swing.JTextField jtf_idMenuDetalle;
    private javax.swing.JTextField jtf_nombre;
    private javax.swing.JTextField jtf_precio;
    // End of variables declaration//GEN-END:variables
}
