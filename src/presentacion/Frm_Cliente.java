/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;
import entidades.Cliente;
import entidades.Restaurante;
import datos.Dt_Clientes;
import datos.Dt_Restaurante;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author BEATRIZ
 */
public class Frm_Cliente extends javax.swing.JFrame {
    //Declaramos las entidades
    private Cliente client = new Cliente();
   private Restaurante rest = new Restaurante();
    
    //Declarando las clases de datos
    private Dt_Clientes dtClient = new Dt_Clientes();
    private Dt_Restaurante dtRest = new Dt_Restaurante();
    
    //Declarando la lista de datos
    private ArrayList<Cliente> listCliente = new ArrayList<Cliente>();
    private ArrayList<Restaurante> listRestaurante = new ArrayList<Restaurante>();
    
    //Declarando el modelo de datos de nuestra tabla
    DefaultTableModel myData = new DefaultTableModel();
    //Declarando un filtrp de datos para la tabla
    TableRowSorter trsfiltro;

    public Frm_Cliente() {
        initComponents();
        llenarComboRestaurante();
        llenarTabla_Cliente();
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_idCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_nombreCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_telefonoCliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btn_eliminarCliente = new javax.swing.JButton();
        btn_nuevoCliente = new javax.swing.JButton();
        btn_guardarCliente = new javax.swing.JButton();
        btn_editarCliente = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txt_direccionCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmb_idRest = new javax.swing.JComboBox<>();
        txt_estadoCliente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_cliente = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txt_buscarCliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 51));

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de los Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 1, 14)))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 102, 0));

        jLabel1.setText("ID Cliente");

        txt_idCliente.setEditable(false);

        jLabel2.setText("Nombre");

        jLabel3.setText("Telefono");

        jLabel5.setText("Estado");

        btn_eliminarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Eliminar.png"))); // NOI18N
        btn_eliminarCliente.setText("Eliminar");
        btn_eliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarClienteActionPerformed(evt);
            }
        });

        btn_nuevoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Nuevo.png"))); // NOI18N
        btn_nuevoCliente.setText("Nuevo");
        btn_nuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoClienteActionPerformed(evt);
            }
        });

        btn_guardarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Guardar.png"))); // NOI18N
        btn_guardarCliente.setText("Guardar");
        btn_guardarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarClienteActionPerformed(evt);
            }
        });

        btn_editarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/multimedia/m_Editar.png"))); // NOI18N
        btn_editarCliente.setText("Editar");
        btn_editarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarClienteActionPerformed(evt);
            }
        });

        jLabel7.setText("Direccion");

        jLabel8.setText("ID_Restaurante");

        cmb_idRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_idRestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_nombreCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                        .addComponent(txt_telefonoCliente)
                        .addComponent(txt_idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_direccionCliente))
                    .addComponent(txt_estadoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_idRest, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_editarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_guardarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_nuevoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_eliminarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addGap(139, 139, 139))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_idRest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_nuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_guardarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_editarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_telefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(txt_direccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_estadoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_eliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        jtbl_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID_Cliente", "ID_Restaurante", "Nombre", "Telefono", "Direccion", "Estado"
            }
        ));
        jtbl_cliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_clienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbl_cliente);

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel6.setText("Buscar");

        txt_buscarCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_buscarClienteKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_buscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_buscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_idRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_idRestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_idRestActionPerformed

    private void btn_guardarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarClienteActionPerformed
        // TODO add your handling code here:
        //Validando que todos los campos sean ingresado por el usuario
        if(cmb_idRest.getSelectedIndex()==0||txt_nombreCliente.getText().equals("")||txt_telefonoCliente.getText().equals("")||txt_direccionCliente.getText().equals("")||txt_estadoCliente.getText().equals("")){
            
        }
        else{
            //Construyendo nuestro objeto con los valores del formulario
            rest =(Restaurante)this.cmb_idRest.getItemAt(this.cmb_idRest.getSelectedIndex());
            client.setRestauranteID(rest.getRestauranteID());
            client.setNombre_cliente(txt_nombreCliente.getText());
            client.setTelefono_cliente(txt_telefonoCliente.getText());
            client.setDireccion(txt_direccionCliente.getText());
            client.setEstado(Integer. parseInt(txt_estadoCliente.getText()));
            
            if(dtClient.existeCliente(client)){
                JOptionPane.showMessageDialog(this, 
                        "El departamento que intenta ingresar ya existe, por favor revise sus datos e intente nuevamente!",
                        "Mensaje",JOptionPane.INFORMATION_MESSAGE);
               
            }
            else{
                //Validando que el metodo guardar devuelva un true
                if(dtClient.guardarCliente(client)){
                    JOptionPane.showMessageDialog(this, "El registro fue almacenado correctamente",
                        "MENSAJE",JOptionPane.INFORMATION_MESSAGE);
                    actualizarTabla();
                    limpiarCampos();
                    
                }
                else{
                    JOptionPane.showMessageDialog(this,
                      "Revise los datos e intente nuevamente.Si el error persiste contacte al Administrador del Sistema.",
                       "ERROR",JOptionPane.ERROR_MESSAGE);
                }
               
            }
        }
    }//GEN-LAST:event_btn_guardarClienteActionPerformed

    private void btn_editarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarClienteActionPerformed
        // TODO add your handling code here:
        //Validando que todos los campos sean ingresado por el usuario:
        if(cmb_idRest.getSelectedIndex()==0||txt_nombreCliente.getText().equals("")||txt_telefonoCliente.getText().equals("")||txt_direccionCliente.getText().equals("")||txt_estadoCliente.getText().equals("")){
            
        }
        else{
            //Construyendo nuestro objeto con los valores de la tabla
            client.setClienteID(Integer.parseInt(txt_idCliente.getText()));
            rest =(Restaurante)this.cmb_idRest.getItemAt(this.cmb_idRest.getSelectedIndex());
            client.setRestauranteID(rest.getRestauranteID());
            client.setNombre_cliente(txt_nombreCliente.getText());
            client.setTelefono_cliente(txt_telefonoCliente.getText());
            client.setDireccion(txt_direccionCliente.getText());
            client.setEstado(Integer. parseInt(txt_estadoCliente.getText()));
            
            //Validando que el metodo editar devuelva un true:
            if(dtClient.editarCliente(client)){
                JOptionPane.showMessageDialog(this, "El registro fue actualizado correctamente",
                   "Mensaje",JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();
            }
            else{
                JOptionPane.showMessageDialog(this,
                        "Revise los datos e intente nuevamente.Si el error persiste contacte al Administrador del Sistema.",
                        "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_editarClienteActionPerformed

    private void btn_eliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarClienteActionPerformed
        // TODO add your handling code here:
        //Validando que todos los campos sean ingresado por el usuario:
        if(cmb_idRest.getSelectedIndex()==0||txt_nombreCliente.getText().equals("")||txt_telefonoCliente.getText().equals("")||txt_direccionCliente.getText().equals("")||txt_estadoCliente.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos!",
                   "ERROR",JOptionPane.WARNING_MESSAGE );
            
        }
        else{
            //Construyendo nuestro objetos con los valores de nuestra tabla;
            client.setClienteID(Integer.parseInt(txt_idCliente.getText()));
            rest =(Restaurante)this.cmb_idRest.getItemAt(this.cmb_idRest.getSelectedIndex());
            client.setRestauranteID(rest.getRestauranteID());
            client.setNombre_cliente(txt_nombreCliente.getText());
            client.setTelefono_cliente(txt_telefonoCliente.getText());
            client.setDireccion(txt_direccionCliente.getText());
            client.setEstado(Integer. parseInt(txt_estadoCliente.getText()));
            
            //Validando que el metodo editar devuelva un true:
            if(dtClient.deleteCliente(client)){
                JOptionPane.showMessageDialog(this, "El registro fue eliminado correctamente",
                        "MENSAJE",JOptionPane.INFORMATION_MESSAGE);
                actualizarTabla();
                limpiarCampos();
                
                
            }
            else{
                JOptionPane.showMessageDialog(this, 
                        "Revise los datos e intente nuevamente.Si el error persiste contacte al Administrador del Sistema.",
                        "ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_eliminarClienteActionPerformed

    private void txt_buscarClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarClienteKeyTyped
        // TODO add your handling code here:
        txt_nombreCliente.addKeyListener(new KeyAdapter(){
            //Se ejecuta cuando el usuario libera una tecla
            @Override
            public void keyReleased(final KeyEvent e){
                String cadena = (txt_nombreCliente.getText()).toUpperCase();
                txt_nombreCliente.setText(cadena);
                repaint();
            }
        });
      
        
    
    }//GEN-LAST:event_txt_buscarClienteKeyTyped

    private void btn_nuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoClienteActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_btn_nuevoClienteActionPerformed

    private void jtbl_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_clienteMouseClicked
        // TODO add your handling code here:
       int fila = this.jtbl_cliente.getSelectedRow();
       int idRest = 0;//Guardando el idRestaurante que se obtiene de la tabla
       int size = 0; //Guarda la cantidad de elementos que hay en el combobox de restaurante
       int pos = 1;//Variable de control para recorrer  las posiciones de los elementos en el combobox
       
       //Asignamos los valores de los campos del formulario
       this.txt_idCliente.setText(this.jtbl_cliente.getValueAt(fila,0).toString());
       this.txt_nombreCliente.setText(this.jtbl_cliente.getValueAt(fila,2).toString());
       this.txt_telefonoCliente.setText(this.jtbl_cliente.getValueAt(fila,3).toString());
       this.txt_direccionCliente.setText(this.jtbl_cliente.getValueAt(fila,4).toString());
       this.txt_estadoCliente.setText(this.jtbl_cliente.getValueAt(fila,5).toString());
       
       //Obteniendo el ID_Restaurante del jtbale:
       idRest = Integer.parseInt(this.jtbl_cliente.getValueAt(fila,1).toString());
       System.out.println("idRest"+idRest);
       
       size = this.cmb_idRest.getItemCount();//Obteniendo la cantida de los elementos contenidos en el cmb
       System.out.println("size"+size);
       
       do{
           rest = (Restaurante)this.cmb_idRest.getItemAt(pos);
           if(rest.getRestauranteID()==idRest){
               this.cmb_idRest.setSelectedIndex(pos);
               System.out.println("pos:"+pos);
               break;
           }
           pos++;
       }
       while(pos<=size);
        
    }//GEN-LAST:event_jtbl_clienteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_Cliente().setVisible(true);
            }
        });
    }
    //Creando mis metodos;

    
    private void llenarTabla_Cliente(){
        //LLenando la lista
        listCliente = dtClient.listarCliente();
        
        //Creando el arraylist con las columnas modelos
        ArrayList<Object> listNombreColumnas = new ArrayList<Object>();
        listNombreColumnas.add("ClienteID");
        listNombreColumnas.add("RestauranteID");
        listNombreColumnas.add("Nombre_cliente");
        listNombreColumnas.add("Telefono_cliente");
        listNombreColumnas.add("Direccion");
        listNombreColumnas.add("Estado");
        
        //Recorriendo cada elemento del ArrayList y creando un objeto
        for(Object column : listNombreColumnas){
            //Asignando las columnas al modelo
            myData.addColumn(column);
        }
        //Recorriendo cada elemento de la lista y creamos el objeto
        for(Cliente cliente : listCliente){
            Object[] datosClient = new Object[]{cliente.getClienteID(),cliente.getRestauranteID(),cliente.getNombre_cliente(),
            cliente.getTelefono_cliente(),cliente.getDireccion(),cliente.getEstado()};
            
            //Asignamos un arreglo de objetos a una fila del modelo
            myData.addRow(datosClient);
            
            //Asignando el modelo o coleccion de datos a la tabla del formularo empleado
            jtbl_cliente.setModel(myData);
        }
       
    }
    private void actualizarTabla(){
        myData.setColumnCount(0);
        myData.setRowCount(0);
        this.llenarTabla_Cliente();
    }
    private void limpiarCampos(){
        this.txt_idCliente.setText("");
        this.cmb_idRest.setSelectedIndex(0);
        this.txt_nombreCliente.setText("");
        this.txt_telefonoCliente.setText("");
        this.txt_direccionCliente.setText("");
        this.txt_estadoCliente.setText("");
    }
    private void llenarComboRestaurante(){
        //Llenar lista
        listRestaurante = dtRest.listarRestaurante();
        for(Restaurante r:listRestaurante){
            //LLenando combobox con los objetos de la lista
            this.cmb_idRest.addItem(r);
        }
    }
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_editarCliente;
    private javax.swing.JButton btn_eliminarCliente;
    private javax.swing.JButton btn_guardarCliente;
    private javax.swing.JButton btn_nuevoCliente;
    private javax.swing.JComboBox<Object> cmb_idRest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbl_cliente;
    private javax.swing.JTextField txt_buscarCliente;
    private javax.swing.JTextField txt_direccionCliente;
    private javax.swing.JTextField txt_estadoCliente;
    private javax.swing.JTextField txt_idCliente;
    private javax.swing.JTextField txt_nombreCliente;
    private javax.swing.JTextField txt_telefonoCliente;
    // End of variables declaration//GEN-END:variables
}
